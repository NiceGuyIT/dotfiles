#!/usr/bin/env -S nu --plugins '[/usr/local/bin/nu_plugin_formats]'

# /usr/bin/env nu --plugins '[/usr/local/bin/nu_plugin_formats]'

export def "main" [] {
	use std log
	# This is a wrapper around the .scripts/firefox-create-profiles.nu script since "plugin use" is a
	# parser keyword in Nushell. "plugin use formats" does not work in $nu.plugin-path does not exist.

	# This script will create a desktop icon for every Firefox profile on Linux.
	# {{ $profiles := joinPath .chezmoi.homeDir ".mozilla/firefox/profiles.ini" }}
	# {{ if stat $profiles }}{{ include $profiles | sha256sum }}{{ end }}
	
	let firefox_bin = (which firefox | get path?.0)
	if ($firefox_bin | is-empty) {
		log warning $"Firefox binary was not found in path: ($firefox_bin)"
		print $"Firefox binary was not found in path: ($firefox_bin)"
		exit 0
	}

	let desktop_file = '/usr/share/applications/firefox.desktop'
	if ($desktop_file | is-empty) {
		log warning $"Sample Firefox desktop file not found: ($desktop_file)"
		print $"Sample Firefox desktop file not found: ($desktop_file)"
		exit 0
	}

	let firefox_dir = ($env.HOME | path join '.mozilla/firefox')
	if ($firefox_dir | is-empty) {
		log warning $"Firefox config directory not found: ($firefox_dir)"
		print $"Firefox config directory not found: ($firefox_dir)"
		exit 0
	}

	if not ($nu.default-config-dir | path exists) {
		mkdir $nu.default-config-dir
	}

	# 'from ini' requires formats plugin
	let formats = (which nu_plugin_formats | get path?.0)
	if ($formats | is-empty) or not ($formats | path exists) {
		log warning "Plugin nu_plugin_formats is not installed"
		print "Plugin nu_plugin_formats is not installed"
		exit 0
	}

	plugin add $formats
	plugin list

	let script = ($env.CHEZMOI_WORKING_TREE | path join ".scripts" "firefox-create-profiles.nu")
	$script
}
